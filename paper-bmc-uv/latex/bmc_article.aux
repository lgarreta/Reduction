\relax 
\global\@namedef{num@address}{4}
\global\@namedef{num@author}{4}
\citation{Shaw2008}
\citation{Shaw2011}
\citation{Shaw2020}
\citation{Shaw2014}
\citation{Nguyen2014}
\citation{Larson2009}
\thanksnewlabel{au1@email}{{lgarreta@agrosavia.co}{1}}
\thanksnewlabel{au2@email}{{mmartinez@ebi.ac.uk}{1}}
\thanksnewlabel{au3@email}{{nediaz@unicauca.edu.co}{1}}
\thanksnewlabel{au4@email}{{pedro.moreno@correounivalle.edu.co}{1}}
\@writefile{toc}{\contentsline {section}{Abstract}{1}}
\thanksnewlabel{au4thanks}{{*}{1}}
\thanksnewlabel{n1thanks}{{\textdagger }{1}}
\citation{Duan2013}
\citation{Peng2018}
\citation{RajanSchulten10}
\citation{Das2006}
\citation{Kim2015}
\citation{Cavallo2018}
\citation{Doerr2017}
\citation{Shao2007}
\citation{Kaufman1990}
\citation{Zhang2004}
\citation{Shaw2011}
\citation{Shaw2020}
\citation{PandeEnsign07}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces {\mathversion  {bold}\bfseries  Protein folding trajectory.} Some protein conformations with their three-dimensional structure are marked as blue dots along the trajectory. The evolution of folding is measured at each step by comparing the structure at time $t_{i}$ to the native structure (black image background) using a structure comparison metric; in this work, we use the TM-score as the metric (see Methods). X-axis: Simulation time from $t_{0}$ to $t_{n}$. Y-axis: TM-score value from 0 (different) to 1 (similar). . }}{2}}
\newlabel{fig:Folding-Trajectory}{{1}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces {\mathversion  {bold}\bfseries  Loss of information in dimensionality reduction and clustering.} The dimensionality reduction method (above) transforms the conformations ( $c_{1},c_{5}$, and $c_{7}$) into a new set of values ( $c'_{1},c'_{5}$, and $c'_{7}$), but their structural information is lost, whereas the clustering method (bottom) forms two groups (G1 and G2), but their temporal order is lost since they contain conformations that overlap in time ($c_{2},c_{3},c_{4},c_{5}$). }}{2}}
\newlabel{fig:lost-info-dimensionality}{{2}{2}}
\citation{Zhang2004}
\citation{zhang2010}
\citation{Oksanen2019}
\citation{RCoreTeam2018}
\citation{Grant2006}
\citation{Larson2009}
\newlabel{sec:Comparing-Structures}{{}{3}}
\newlabel{subsec:Techniques-for-reduction}{{}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces {\mathversion  {bold}\bfseries  Overview of the proposed algorithm.} Step 1: Divide the trajectory into segments (vertical dashed lines) and reduce each individually. Each segment has $k$ conformations from time $t_{1}$ to $t_{k}$. Step 2: For each segment, extract characteristic conformations (blue dots) and remove redundant ones (red dots). Step 3: Select the most representative conformations among the previous conformations to obtain a reduced segment. }}{3}}
\newlabel{fig:Algorithm-Description}{{3}{3}}
\citation{Kaufman1990}
\citation{RajanSchulten10}
\citation{Duan2014}
\citation{Kim2015}
\citation{Cavallo2018}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces {\mathversion  {bold}\bfseries  Parallel processing of segments.} The trajectory is divided into $m$ segments ($S_{1}$, ..., $S_{m}$), and each segment is processed separately and in parallel on a machine with n processing cores. The results of the extraction and selection steps ($S'_{1}$, ..., $S'_{m}$) are independent of each other and are joined to form the reduced trajectory.}}{4}}
\newlabel{fig:Algorithm-Parallel}{{4}{4}}
\newlabel{sec:Comparing-other-methods}{{}{4}}
\citation{Peng2018}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces {\mathversion  {bold}\bfseries  Plots of the TM-score values for the original and reduced trajectories.} Protein and simulation details on the left. Trajectories on the right: original (upper part), and reduced (lower part). (A) Trajectory of trp-cage protein, reduced by 98\%, from 1044001 to 20881 conformations. (B) Trajectory of SARS CoV2 protein, reduced by 80\%, from 100000 to 2000 conformations. (C) Trajectory of the villin-headpiece protein, reduced by 80\%, from 15201 to 3011 conformations. }}{5}}
\newlabel{fig:Trajectory-Results}{{5}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces {\mathversion  {bold}\bfseries  Comparison with other methods.} Intrinsic information captured from the original trajectory of the villin-headpiece protein is largely preserved in the reduced trajectories produced by our algorithm. TM-score plot, nMDS pattern and clustering groups are presented at the top, bottom left, and bottom right of each panel. (A) Original trajectory. (B and C) Trajectories reduced by 52\% and 80\%, respectively. The nMDS produces a set of circular patterns associated with conformations occurring in different times of the simulation, whereas clustering produces a structure of three clusters associated with the first two principal components of the $C_{\alpha }$atoms of the conformations. }}{6}}
\newlabel{fig:Comparaciones-PCA-nMDS}{{6}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces {\mathversion  {bold}\bfseries  Performance of the algorithm.} (A) Runtime comparisons for four folding reduction techniques: nMDS, clustering, PCA, and our proposed algorithm (running with one and two cores). With one core, PCA was the most efficient algorithm, followed by our algorithm. However, when the proposed algorithm was run with two cores, its runtime was reduced by half, being more efficient than PCA. (B) Evaluation of algorithm parallelization. When the number of processing cores is multiplied by two, the processing time reduces by half with a quasi-linear speedup that is maintained for up to \textasciitilde {}8 cores (8x). \\ }}{6}}
\newlabel{fig:Performance-methods}{{7}{6}}
\bibstyle{bmc-mathphys}
\bibdata{bmc_article}
\bibcite{Shaw2008}{1}
\bibcite{Shaw2011}{2}
\bibcite{Shaw2020}{3}
\bibcite{Shaw2014}{4}
\bibcite{Nguyen2014}{5}
\bibcite{Larson2009}{6}
\bibcite{Duan2013}{7}
\bibcite{Peng2018}{8}
\bibcite{RajanSchulten10}{9}
\bibcite{Das2006}{10}
\bibcite{Kim2015}{11}
\bibcite{Cavallo2018}{12}
\bibcite{Doerr2017}{13}
\bibcite{Shao2007}{14}
\bibcite{Kaufman1990}{15}
\bibcite{Zhang2004}{16}
\thanksnewlabel{aff1thanks}{{1}{7}}
\thanksnewlabel{aff2thanks}{{2}{7}}
\thanksnewlabel{aff3thanks}{{3}{7}}
\thanksnewlabel{aff4thanks}{{4}{7}}
\bibcite{PandeEnsign07}{17}
\bibcite{zhang2010}{18}
\bibcite{Oksanen2019}{19}
\bibcite{RCoreTeam2018}{20}
\bibcite{Grant2006}{21}
\bibcite{Duan2014}{22}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces {\mathversion  {bold}\bfseries  Protein folding trajectory.} Some protein conformations with their three-dimensional structure are marked as blue dots along the trajectory. The evolution of folding is measured at each step by comparing the structure at time $t_{i}$ to the native structure (black image background) using a structure comparison metric; in this work, we use the TM-score as the metric (see Methods). X-axis: Simulation time from $t_{0}$ to $t_{n}$. Y-axis: TM-score value from 0 (different) to 1 (similar). . }}{8}}
\newlabel{fig:Folding-Trajectory}{{8}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces {\mathversion  {bold}\bfseries  Loss of information in dimensionality reduction and clustering.} The dimensionality reduction method (above) transforms the conformations ( $c_{1},c_{5}$, and $c_{7}$) into a new set of values ( $c'_{1},c'_{5}$, and $c'_{7}$), but their structural information is lost, whereas the clustering method (bottom) forms two groups (G1 and G2), but their temporal order is lost since they contain conformations that overlap in time ($c_{2},c_{3},c_{4},c_{5}$). }}{8}}
\newlabel{fig:lost-info-dimensionality}{{9}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces {\mathversion  {bold}\bfseries  Overview of the proposed algorithm.} Step 1: Divide the trajectory into segments (vertical dashed lines) and reduce each individually. Each segment has $k$ conformations from time $t_{1}$ to $t_{k}$. Step 2: For each segment, extract characteristic conformations (blue dots) and remove redundant ones (red dots). Step 3: Select the most representative conformations among the previous conformations to obtain a reduced segment. }}{8}}
\newlabel{fig:Algorithm-Description}{{10}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces {\mathversion  {bold}\bfseries  Parallel processing of segments.} The trajectory is divided into $m$ segments ($S_{1}$, ..., $S_{m}$), and each segment is processed separately and in parallel on a machine with n processing cores. The results of the extraction and selection steps ($S'_{1}$, ..., $S'_{m}$) are independent of each other and are joined to form the reduced trajectory.}}{8}}
\newlabel{fig:Algorithm-Parallel}{{11}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces {\mathversion  {bold}\bfseries  Plots of the TM-score values for the original and reduced trajectories.} Protein and simulation details on the left. Trajectories on the right: original (upper part), and reduced (lower part). (A) Trajectory of trp-cage protein, reduced by 98\%, from 1044001 to 20881 conformations. (B) Trajectory of SARS CoV2 protein, reduced by 80\%, from 100000 to 2000 conformations. (C) Trajectory of the villin-headpiece protein, reduced by 80\%, from 15201 to 3011 conformations. }}{9}}
\newlabel{fig:Trajectory-Results}{{12}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces {\mathversion  {bold}\bfseries  Comparison with other methods.} Intrinsic information captured from the original trajectory of the villin-headpiece protein is largely preserved in the reduced trajectories produced by our algorithm. TM-score plot, nMDS pattern and clustering groups are presented at the top, bottom left, and bottom right of each panel. (A) Original trajectory. (B and C) Trajectories reduced by 52\% and 80\%, respectively. The nMDS produces a set of circular patterns associated with conformations occurring in different times of the simulation, whereas clustering produces a structure of three clusters associated with the first two principal components of the $C_{\alpha }$atoms of the conformations. }}{9}}
\newlabel{fig:Comparaciones-PCA-nMDS}{{13}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces {\mathversion  {bold}\bfseries  Performance of the algorithm.} (A) Runtime comparisons for four folding reduction techniques: nMDS, clustering, PCA, and our proposed algorithm (running with one and two cores). With one core, PCA was the most efficient algorithm, followed by our algorithm. However, when the proposed algorithm was run with two cores, its runtime was reduced by half, being more efficient than PCA. (B) Evaluation of algorithm parallelization. When the number of processing cores is multiplied by two, the processing time reduces by half with a quasi-linear speedup that is maintained for up to \textasciitilde {}8 cores (8x). }}{9}}
\newlabel{fig:Performance-methods}{{14}{9}}
\newlabel{LastPage}{{}{9}}
\xdef\lastpage@lastpage{9}
\gdef\lastpage@lastpageHy{}
